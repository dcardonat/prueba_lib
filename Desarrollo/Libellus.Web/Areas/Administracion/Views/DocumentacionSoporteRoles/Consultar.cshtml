@model IPagedList<Libellus.Web.Areas.Administracion.Models.DocumentacionSoporteRoles.SoporteRolViewModel>

@{
    ViewBag.Title = "Consultar";
    object valorAnio = ViewBag.AnioLectivo;
}

<div class="content-header">
    <h2 class="content-header-title">Documentos para soporte por roles</h2>
</div>

<p>
    @Html.ActionLink("Crear documentación para soporte", "Crear")
</p>

@using (@Html.BeginForm("Consultar", "DocumentacionSoporteRoles", FormMethod.Get))
{
    <div class="row">
        <div class="form-group col-md-4">
            @Html.Partial("_AniosLectivos", @valorAnio)
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.First().IdRolInstitucional)
            @Html.DropDownList("RolInstitucional", ViewBag.Roles as IEnumerable<SelectListItem>, new { @class = "form-control", id = "ddlRolInstitucional" })
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.First().IdNivelEducativo)
            @Html.DropDownList("NivelEducativo", ViewBag.Niveles as IEnumerable<SelectListItem>, new { @class = "form-control", id = "ddlNivelEducativo" })
        </div>
    </div>

    <br />
    <div class="form-group centered">
        <input type="submit" value="Consultar" class="btn btn-primary" />
    </div>
}

@if (Model.Count() > 0)
{
    <table class="@EstilosHelper.TablaLibellus">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().IdAnioLectivo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IdRolInstitucional)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IdNivelEducativo)
            </th>
            <th colspan="2">Acción</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td class="centered">
                    @Html.DisplayFor(modelItem => item.AnioLectivo.Anio)
                </td>
                <td class="centered">
                    @Html.DisplayFor(modelItem => item.RolInstitucional.Descripcion)
                </td>
                <td class="centered">
                    @Html.DisplayFor(modelItem => item.NivelEducativo.Descripcion)
                </td>
                <td class="centered">
                    @Html.ActionLink("Editar", "Editar", new { id = item.Id })
                </td>
                <td class="centered">
                    @Html.BotonEliminar("Eliminar", "DocumentacionSoporteRoles", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

    <div class="centered">
        @Html.PagedListPager(Model, pagina => Url.Action("Consultar", new { pagina }))
    </div>

    <div class="form-group" style="text-align: center !important;">
        <button type="button" id="exportarExcel" class="btn btn-success centered">Exportar a Excel</button>
    </div>
    @Html.Hidden("tokenExportarExcel")
}

@section Scripts{
    @Scripts.Render("~/bundles/jquerycookies")

    <script type="text/javascript">

        $("#exportarExcel").bind("click", function () {

            $('[name="tokenExportarExcel"]').val(new Date().getTime());

            IniciarDescargaArchivo("exportarExcel");
            window.location.href = "@Url.Action("ExportarInformacionExcel")" + "?token=" + $('[name="tokenExportarExcel"]').val();

        });

        $(document).ready(function () {

            var textoRol = $("#ddlRolInstitucional option:selected").text();
            var valorRol = $("#ddlRolInstitucional option:selected").val();

            if (textoRol === "Docente" || valorRol === "") {
                $("#ddlNivelEducativo").prop("disabled", true).val("");
            }
            else {
                $("#ddlNivelEducativo").removeProp("disabled");
            }

            $("#ddlRolInstitucional").change(function () {
                if ($("#ddlRolInstitucional option:selected").text() === "Docente" || $(this).val() === "") {
                    $("#ddlNivelEducativo").prop("disabled", true).val("");
                }
                else {
                    $("#ddlNivelEducativo").removeProp("disabled");
                }
            });

            $("#IdAnioLectivo").change(function (e) {
                var x = $("#IdAnioLectivo").trigger("EstadoAnio").data("resultado");
            });

        });
    </script>
}

